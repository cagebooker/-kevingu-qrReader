{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, memo } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport QrReader from \"react-qr-scanner\";\nimport useSound from 'use-sound';\n\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst qrReader = memo((props) => {\n    const [scanResultStatus, setScanResultStatus] = useState('normal');   // normal, wait, error, success, warning\n    const [scanResultList, setScanResultList] = useState('');  // 編號、條碼號、時間、狀態\n    const [scanResultSuccessNumber, setScanResultSuccessNumber] = useState(1);\n    const [asynchronous, setAsynchronous] = useState(false);\n\n    const [playSuccess] = useSound(process.env.PUBLIC_URL + \"/assets/music/entryScan-success.mp3\");\n    const [playError] = useSound(process.env.PUBLIC_URL + \"/assets/music/entryScan-error.mp3\");\n\n    const getCurrentDateTime = () => {\n        const date = new Date();\n        const utcOffset = 8; // UTC+8\n        // 設定時區偏移\n        date.setUTCHours(date.getUTCHours() + utcOffset);\n        // 獲取年、月、日、時、分、秒\n        const year = date.getUTCFullYear();\n        const month = (date.getUTCMonth() + 1).toString().padStart(2, '0');\n        const day = date.getUTCDate().toString().padStart(2, '0');\n        const hours = date.getUTCHours().toString().padStart(2, '0');\n        const minutes = date.getUTCMinutes().toString().padStart(2, '0');\n        const seconds = date.getUTCSeconds().toString().padStart(2, '0');\n        // 格式化時間\n        const formattedDateTime = `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\n        return formattedDateTime;\n    };\n\n    const handleScan = useCallback(async (data) => {\n        if(data) {\n            if(scanResultStatus !== 'normal') return;\n            setScanResultStatus('wait');\n            const newScanResult = {\n                serialNumber: scanResultSuccessNumber<10?`0${scanResultSuccessNumber}`:scanResultSuccessNumber,\n                code: data.text,\n                time: getCurrentDateTime(),\n            };\n            setScanResultList([newScanResult, ...scanResultList]);\n            setScanResultSuccessNumber(scanResultSuccessNumber >= 99 ? 1 : scanResultSuccessNumber+1 );\n            setAsynchronous(true);\n        };\n    }, [scanResultStatus, scanResultList, scanResultSuccessNumber, setScanResultStatus]);\n    \n    const handleError = useCallback((err) => {\n        if(err) console.log(err)\n    }, []);\n\n    useEffect(() => {\n        if(asynchronous){\n            props.data(scanResultList);\n            setScanResultStatus('wait');\n            setAsynchronous(false);\n        };\n    }, [scanResultStatus, asynchronous, props, scanResultList, setAsynchronous, setScanResultStatus]);\n\n\n    useEffect(() => {\n        const setStatusWithDelay = (status, playSound) => {\n            setScanResultStatus(status);\n            if (playSound) playSound();\n            if (status !== 'normal' && status !== 'wait') {\n                setTimeout(() => {\n                    setScanResultStatus('normal');\n                    props.setStatus('normal');\n                }, 3000);\n            }\n        };\n        switch(props.status) {\n            case 'normal':\n                setScanResultStatus('normal');\n                break;\n            case 'wait':\n                setStatusWithDelay('wait', null);\n                break;\n            case 'success':\n                setStatusWithDelay('success', playSuccess);\n                break;\n            case 'warning':\n                setStatusWithDelay('warning', playError);\n                break;\n            default:\n                setStatusWithDelay('error', playError);\n                break;\n        }\n    }, [props, playSuccess, playError]);\n    \n\n\n    return (\n        <div className=\"d-flex align-items-center justify-content-center flex-column\">\n            <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{background:\"rgba(217, 217, 217, 0)\", width:\"330px\", height:`${props.height}px`, borderRadius:\"10px\", margin:\"0px\", position: 'relative'}}>\n                {scanResultStatus === 'normal' ?\n                <div>\n                    <QrReader\n                        style={{ width: `${props.width}px`, height: `${props.height}px`, objectFit: 'cover', background:\"black\", marginTop: '8px'}}\n                        onError={err => handleError(err)}\n                        onScan={data => handleScan(data)}\n                        delay={100}\n                        constraints={\n                            // window.innerWidth > 768 \n                            window.innerWidth > 1280 \n                            ? undefined\n                            : {\n                                video: {\n                                    facingMode: { exact: `environment` }\n                                }\n                            }\n                        } \n                    />\n\n                    { scanResultStatus === 'normal' && (\n                        <div style={{\n                            background:\"rgba(102, 252, 241, 0.7)\", \n                            height:\"5px\", \n                            width:`${props.width}px`, \n                            borderRadius:\"10px\", \n                            position:\"absolute\", \n                            bottom: '0', \n                            animation: \"moveUpDown 3s ease-in-out infinite\"\n                        }}></div>\n                    )}\n                </div>\n                 : \n                <div style={{ width: `${props.width}px`, height: `${props.height}px`, background:\"black\"}}>\n                    {scanResultStatus === 'wait' &&(\n                        <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n                            <div style={{ width: `${props.width}px`, height: `${props.height}px`, background:\"black\", display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                                <Spinner animation=\"border\" variant=\"light\"/>\n                            </div>\n                        </div>\n                    )}\n\n                    {scanResultStatus === 'success' && (\n                        <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n                            <ReactSVG \n                                src={ process.env.PUBLIC_URL + \"/assets/img/scan/entrtScan-pass.svg\" } \n                                style={{\n                                    width: '100%', \n                                    opacity:\"0.8\",\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    marginBottom: '20px',\n                                }}\n                            />\n                            <div className=\"d-flex align-items-center justify-content-center\" \n                                style={{\n                                    background:\"rgba(102, 252, 241, 1)\", \n                                    height:\"48px\", \n                                    width:\"200px\", \n                                    borderRadius:\"5px\", \n                                    color:\"black\", \n                                    fontSize:\"18px\", \n                                    fontWeight:\"400\", \n                                    opacity:\"0.8\"\n                                }}\n                            >兌換成功\n                            </div>\n                        </div>\n                    )}\n\n                    {scanResultStatus === 'warning' && (\n                        <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n                            <ReactSVG src={process.env.PUBLIC_URL + \"/assets/img/scan/entrtScan-warning.svg\"} \n                                style={{\n                                    width: '100%', \n                                    opacity:\"0.8\",\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    marginBottom: '20px',\n                                }}\n                            />\n                            <div className=\"d-flex align-items-center justify-content-center\" \n                                style={{\n                                    background:\"#FCD266\", \n                                    height:\"48px\", \n                                    width:\"200px\", \n                                    borderRadius:\"5px\", \n                                    color:\"black\", \n                                    fontSize:\"18px\", \n                                    fontWeight:\"400\", \n                                    opacity:\"0.8\"\n                                }}\n                            >票券有誤</div>\n                        </div>\n                    )}\n                    \n                    {scanResultStatus === 'error' && (\n                        <div className=\"d-flex align-items-center justify-content-center flex-column\" style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n                            <ReactSVG src={process.env.PUBLIC_URL + \"/assets/img/scan/entrtScan-error.svg\"} \n                                style={{\n                                    width: '100%', \n                                    opacity:\"0.8\",\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    marginBottom: '20px',\n                                }}\n                            />\n                            <div className=\"d-flex align-items-center justify-content-center\" \n                                style={{\n                                    background:\"rgba(249, 103, 103, 1)\", \n                                    height:\"48px\", \n                                    width:\"200px\", \n                                    borderRadius:\"5px\", \n                                    color:\"black\", \n                                    fontSize:\"18px\", \n                                    fontWeight:\"400\", \n                                    opacity:\"0.8\"\n                                }}\n                            >無效票券</div>\n                        </div>\n                    )}\n                </div>\n                }   \n\n\n\n                <img src={ process.env.PUBLIC_URL + `/assets/img/scan/entrtScan-frame${\n                        scanResultStatus === 'normal' ? '' : \n                        scanResultStatus === 'warning' ? 'Yellow' :\n                        scanResultStatus === 'error' ? 'Red' : 'Tint' }.svg`}\n                        className=\"img-fluid\"\n                        alt=\"\"\n                        style={{width:`${props.width}px`,height:`${props.height}px` , position: 'absolute', left: '62px', top: '0px', transform:'scale(1.2,1.12)'}}\n                /> \n            </div>\n            \n            \n\n        </div> \n    )\n});\n\n// 匯出函式\nmodule.exports = qrReader;"],"names":["qrReader","memo","props","scanResultStatus","setScanResultStatus","useState","scanResultList","setScanResultList","scanResultSuccessNumber","setScanResultSuccessNumber","asynchronous","setAsynchronous","playSuccess","useSound","process","env","PUBLIC_URL","playError","getCurrentDateTime","date","Date","setUTCHours","getUTCHours","getUTCFullYear","getUTCMonth","toString","padStart","getUTCDate","getUTCMinutes","getUTCSeconds","handleScan","useCallback","async","data","newScanResult","serialNumber","code","text","time","handleError","err","console","log","useEffect","setStatusWithDelay","status","playSound","setTimeout","setStatus","React","createElement","className","style","background","width","height","borderRadius","margin","position","QrReader","objectFit","marginTop","onError","onScan","delay","constraints","window","innerWidth","undefined","video","facingMode","exact","bottom","animation","top","left","transform","display","justifyContent","alignItems","Spinner","variant","ReactSVG","src","opacity","marginBottom","color","fontSize","fontWeight","alt","module","exports"],"mappings":"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"}